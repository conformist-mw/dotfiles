---
- name: Create a network for traefik
  community.docker.docker_network:
    name: "{{ network }}"
    ipam_config:
      - subnet: 192.168.100.0/24

- name: Copy traefik config file
  ansible.builtin.copy:
    src: traefik.yml
    dest: "{{ server_dir }}/traefik.yml"

- name: Copy traefik config file
  ansible.builtin.copy:
    src: dynamic.yml
    dest: "{{ server_dir }}/dynamic.yml"

- name: Copy htpasswd file
  ansible.builtin.copy:
    content: "{{ DUMBPROXY_HTPASSWD }}"
    dest: "{{ server_dir }}/traefik.htpasswd"

- name: Create main dir
  ansible.builtin.file:
    path: "{{ server_dir }}"
    state: directory

- name: Create data dir
  ansible.builtin.file:
    path: "{{ data_dir }}"
    state: directory

- name: Traefik container
  community.docker.docker_container:
    name: traefik
    image: "traefik:v2.10"
    pull: true
    restart_policy: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - name: "{{ network }}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ server_dir }}/traefik.yml:/traefik.yml:ro"
      - "{{ server_dir }}/dynamic.yml:/dynamic.yml:ro"
      - "{{ server_dir }}/traefik.htpasswd:/traefik.htpasswd:ro"
      - "{{ server_dir }}/letsencrypt:/letsencrypt"
    env:
      DO_AUTH_TOKEN: "{{ DNS_DIGITALOCEAN_TOKEN }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.entrypoints: "websecure"
      traefik.http.routers.traefik.tls: "true"
      traefik.http.routers.traefik.tls.certresolver: "letsencrypt"
      traefik.http.routers.traefik.rule: "Host(`traefik.{{ ansible_host }}`)"
      traefik.http.services.traefik.loadbalancer.server.port: "8080"
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.routers.traefik.middlewares: "auth-chain@file"

- name: Run segments-go container
  community.docker.docker_container:
    image: segments-go
    name: segments-go
    restart: true
    restart_policy: "unless-stopped"
    networks:
      - name: "{{ network }}"
    volumes:
      - "{{ data_dir }}/segments-go/segments.db:/app/segments.db"
    labels:
      traefik.enable: "true"
      traefik.http.routers.segments-go.entrypoints: "websecure"
      traefik.http.routers.segments-go.tls: "true"
      traefik.http.routers.segments-go.tls.certresolver: "letsencrypt"
      traefik.http.routers.segments-go.rule: "Host(`segments.{{ ansible_host }}`)"
      traefik.http.services.segments-go.loadbalancer.server.port: "8080"
      traefik.http.routers.segments-go.middlewares: "no-auth-chain@file"

- name: Copy ha-nginx config file
  ansible.builtin.copy:
    src: ha-nginx.conf
    dest: "{{ data_dir }}/nginx/ha-nginx.conf"

- name: Homeassistant Nginx
  community.docker.docker_container:
    name: ha-nginx
    image: nginx:latest
    restart_policy: "unless-stopped"
    networks:
      - name: "{{ network }}"
    volumes:
      - "{{ data_dir }}/nginx/ha-nginx.conf:/etc/nginx/nginx.conf:ro"
    labels:
      traefik.enable: "true"
      traefik.http.routers.ha.entrypoints: "websecure"
      traefik.http.routers.ha.tls: "true"
      traefik.http.routers.ha.tls.certresolver: "letsencrypt"
      traefik.http.routers.ha.rule: "Host(`ha.{{ ansible_host }}`)"
      traefik.http.services.ha.loadbalancer.server.port: "80"
      traefik.http.routers.ha.middlewares: "no-auth-chain@file"
